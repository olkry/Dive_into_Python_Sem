'''
Разработайте программное обеспечение для ведения журнала событий. Вам необходимо создать класс, который будет представлять строки журнала и включать в себя информацию об авторе и времени создания каждой записи.

Условие задачи:

Создайте класс MyStr, который наследуется от встроенного класса str и добавлять дополнительную информацию о создателе строки и времени ее создания. Этот класс будет представлять строки с информацией о событиях.

Класс MyStr должен иметь следующие атрибуты и методы:

value (str): Строковое значение с описанием события.
author (str): Имя автора, создавшего запись.
time: Время создания записи в формате '%Y-%m-%d %H:%M'.

Магические методы (Dunder-методы):

Реализуйте метод __new__(cls, value, author), который создает новый объект класса MyStr с заданным value и author. Метод также автоматически фиксирует время создания записи. В этом методе создается новый объект MyStr с указанными атрибутами и текущим временем в атрибуте time.

Реализуйте метод __str__(self), который возвращает строковое представление объекта класса MyStr с информацией о событии, авторе и времени создания.

Реализуйте метод __repr__(self), который возвращает строковое представление объекта класса MyStr.
Метод __repr__ возвращает строку, которая может быть использована для создания точно такого же объектаMyStrс теми же значениямиvalueиauthor`
'''

from datetime import datetime


class MyStr(str):

    def __new__(cls, value, name_autor, *args, **kwargs):
        instanse = super().__new__(cls, value)
        return instanse

    def __init__(self, value, name_autor):
        self.value = value
        self.name_autor = name_autor
        self.time = datetime.now().strftime('%Y-%m-%d %H:%M')

    def __repr__(self):
        return f"MyStr('{self.value}', '{self.name_autor}')"

    def __str__(self):
        return f'{self.value} (Автор: {self.name_autor}, Время создания: {self.time})'


my_string = MyStr("Заключительный текст", "Достоевский")
print(repr(my_string))
